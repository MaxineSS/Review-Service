swagger: '2.0'
info:
  description: This is a Review API for Atelier e-commerse shop.
  version: 1.0.0
  title: Review API
  # put the contact info for your development or API team
  contact:
    email: sejin.maxine@gmail.com
schemes:
  - http
host: 54.90.132.109
basePath: /reviews

# tags are used for organizing operations
tags:
- name: Reviews
  description: Operations available to all users
- name: Metadata
  description: Operations available to all users
  
paths:
  /:
    get:
      tags:
      - Reviews
      summary: Search reviews
      description: |
        By passing in the appropriate options, you can search for
        registered reviews to given product-id in the system
      produces:
      - application/json
      parameters:
      - in: query
        name: product_id
        description: pass `product-id` for looking up reviews to given product-id
        required: true
        type: integer
      - in: query
        name: page
        description: number of records to skip for pagination
        type: integer
      - in: query
        name: count
        description: number of records to return
        type: integer
      responses:
        200:
          description: search results matching product-id
          schema:
            type: array
            items:
              $ref: '#/definitions/Reviews'
        404:
          description: bad input parameter
    post:
      tags:
      - Reviews
      summary: Add new review to database
      description: adds new review to database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: review
        description: new review object to add
        schema:
          $ref: '#/definitions/NewReview'
      responses:
        201:
          description: review created
        400:
          description: invalid input, object invalid
  /{review_id}/helpful:
    put:
      tags:
      - Reviews
      summary: Update review helpfulness state
      description: |
        By passing in the appropriate review id, you can update count of
        helpfulness property in given review in the system
      produces:
      - application/json
      parameters:
      - in: path
        type: integer
        name: review_id
        required: true
      responses:
        200:
         description: Successfully updated helpfulness count incrementing by 1
         schema:
            type: object
            properties:
              status:
                type: string
                example: Updated
        100:
         description: Invalid request
  /{review_id}/report:
    put:
      tags:
      - Reviews
      summary: Update review report state
      description: |
        By passing in the appropriate review id, you can update report property in given review in the system
      produces:
      - application/json
      parameters:
      - in: path
        type: integer
        name: review_id
        required: true
      responses:
        200:
         description: Successfully updated report state to true
         schema:
            type: object
            properties:
              status:
                type: string
                example: Reported
        100:
         description: Invalid request
  /meta:
    get:
      tags:
      - Metadata
      summary: Search metadata to given product
      description: |
        By passing in the appropriate product id, you can search for
        accumulated metadata from reviews to given product-id in the system
      produces:
      - application/json
      parameters:
      - in: query
        name: product_id
        description: pass `product-id` for looking up metadata to given product-id
        required: true
        type: integer
      responses:
        200:
          description: search results matching product-id
          schema:
            $ref: '#/definitions/Meta'
        404:
          description: bad input parameter
  
definitions:
  Reviews:
    type: object
    properties:
      product:
        type: integer
        example: 59556
      page:
        type: integer
        example: 0
      count:
        type: integer
        example: 5
      results:
        type: array
        items:
          $ref: '#/definitions/Review'
  Review:
    type: object
    properties:
      _id:
        type: string
        example: '61de37530278bfe503a2b276'
      body:
        type: string
        example: 'I really did or did not like this product based on whether it was sustainably sourced.  Then I found out that its made from nothing at all.'
      date:
        type: string
        format: date-time
        example: '2020-07-30T03:41:21.467Z'
      helpfulness:
        type: integer
        example: 8
      photos:
        type: array
        items:
         $ref: '#/definitions/Photo'
      product_id:
        type: integer
        example: 59556 
      rating:
        type: integer
        example: 5
      recommend:
        type: boolean
        example: true
      reported:
        type: boolean
        example: false
      response:
        type: string
        example: Thank you for the great review!
      review_id:
        type: integer
        example: 578413
      reviewer_email:
        type: string
        example: Davion59@gmail.com
      reviewer_name:
        type: string
        example: Alverta
      summary:
        type: string
        example: This product was ok!
  NewReview:
    type: object
    required:
    - product_id
    - name
    - email
    - recommend
    - summary
    - body
    - rating
    - characteristics
    properties:
      product_id:
        type: integer
        example: 59556 
      name:
        type: string
        example: Alverta
      email:
        type: string
        example: Davion59@gmail.com
      recommend:
        type: boolean
        example: true
      summary:
        type: string
        example: This product was ok!
      body:
        type: string
        example: 'I really did or did not like this product based on whether it was sustainably sourced.  Then I found out that its made from nothing at all.'
      rating:
        type: integer
        example: 5
      photos:
        type: array
        items:
          example: "https://ucarecdn.com/f1f74d13-d6fb-410d-881b-abbb552f8c80/OlaSittingontheFloor.svg"
      characteristics: 
        type: object
        example: { "2761908": 2, "2761910": 3, "2761911": 1, "2761909": 4 }
  Photo:
    type: object
    properties:
      url:
        type: string
        example: "https://ucarecdn.com/f1f74d13-d6fb-410d-881b-abbb552f8c80/OlaSittingontheFloor.svg"
  Meta:
    type: object
    properties:
      product_id:
        type: integer
        example: 59556
      ratings:
        type: object
        example: {
        "1": 1,
        "2": 2,
        "4": 1,
        "5": 1
    }
      recommended:
        type: object
        example: {
        "1": 1,
        "2": 2,
        "4": 1,
        "5": 1
    }
      characteristics:
        $ref: '#/definitions/Characteristics'
  Characteristics:
    type: object
    properties:
      fit:
        type: object
        example: { '1': 1, '2': 2, '4': 2, id: 3012685, value: 2.6 }
      Comfort:
        type: object
        example: { '1': 1, '3': 1, '5': 3,' id': 3012687, 'value': 3.8 }
      Quality:
        type: object
        example:  {
            "4": 3,
            "5": 2,
            "id": 3012688,
            "value": 4.4
        }
      Length:
        type: object
        example: {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "id": 3012686,
            "value": 3
        }